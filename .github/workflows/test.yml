name: Appconfig

on:
  workflow_dispatch:

jobs:
 build-and-deploy:
   runs-on: windows-latest
   environment: dev
               
   steps:
   - name: SHow env var
     run: |
       echo $ENVIRONMENT_DEV  
       echo ${{vars.ENVIRONMENT_DEV }}
      #env:
          #ENVIRONMENT_STAGE = ${{ vars.ENVIRONMENT_DEV }}
        # ^ 
        # Reference by environment variable for added security
          # ^                        # ^
          # Pass the Github          # Reference the GitHub Environment's
          # environment variable     # variable using the vars 
          # to the step's            # context
          # environment
   
   -  run: echo "folder ${{github.workspace}}"
   -  name: 'Checkout GitHub Action'
      uses: actions/checkout@v2
   -  id: getParams
      shell: bash
      run: |
        content=`cat ./SOAP_APIs/appsettings.json`
                  # the following lines are only required for multi line json
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
            # end of optional handling for multi line json
        echo "::set-output name=packageJson::$content"
        echo "${{github.env}}"
      
      #testing output from the previous command
   -  name: echo ServerName
      shell: bash
      run: echo "${{steps.getParams.outputs.packageJson}}"

   - name: Read and assign
     id: output_test
     shell: pwsh
     run: |
       $file_text = Get-Content "./SOAP_APIs/appsettings.json"
       echo "::set-output name=new_value::$file_text"
       #echo $GITHUB_OUTPUT
       #Write-Host "::set-output name=new_value::$file_text"
      
   # test to see if done correctly - should echo "value"
   -  name: echo ServerName poweshell
      shell: pwsh
      run: echo @"${{steps.output_test.outputs.new_value}}"

   #- run: Write-Host ${​​​​​​​​​{​​​​​​​​​ steps.output_test.outputs.new_value }​​​​​​​​​}​​​​​​​​​
