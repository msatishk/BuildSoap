name: Appconfig

on:
  workflow_dispatch:

env:
  AZURE_SOAPAPI_NAME: 'as-onx1-intgapp-dev-001'   # set this to your function app name on Azure
  AZURE_SOAPAPI_PACKAGE_PATH: 'SOAP_APIs'       
  MY_FILE_PATH: "${{ github.workspace }}/SOAP_APIs/appsettings.json"    # set this to the dotnet version to use (e.g.'6.0.x', 8.0.x)

jobs:
 build-and-deploy:
   runs-on: windows-latest
   environment: dev
               
   steps:
   -  run: echo "folder ${{github.workspace}}"
   -  name: 'Checkout GitHub Action'
      uses: actions/checkout@v2
   -  id: getParams
      shell: bash
      run: |
        content=`cat ./SOAP_APIs/appsettings.json`
                  # the following lines are only required for multi line json
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
            # end of optional handling for multi line json
        echo "::set-output name=packageJson::$content"
                
                #testing output from the previous command
   -  name: echo ServerName
      shell: bash
      run: echo "${{steps.getParams.outputs.packageJson}}"

   - name: Read and assign
     id: output_test
     shell: pwsh
     run: |
       $file_text = Get-Content "./SOAP_APIs/appsettings.json"
       echo "::set-output name=new_value::$file_text"
       #echo $GITHUB_OUTPUT
       #Write-Host "::set-output name=new_value::$file_text"
      
   # test to see if done correctly - should echo "value"
   -  name: echo ServerName poweshell
      shell: pwsh
      run: echo @"${{steps.output_test.outputs.new_value}}"

   #- run: Write-Host ${​​​​​​​​​{​​​​​​​​​ steps.output_test.outputs.new_value }​​​​​​​​​}​​​​​​​​​
